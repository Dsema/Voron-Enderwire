######################################################################
# START PRINT
######################################################################
[gcode_macro START_PRINT]
variable_parameter_EXTRUDER_TEMP: 210
variable_parameter_BED_TEMP: 60
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    
    G90                                 # Absolute Positioning
    G92 E0                              # Reset Extruder
    G28                                 # Home all axes
    
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    
    M140 S{BED_TEMP}                    # Heat bed without waiting
    M109 S180                           # Heat hotend and wait
    
    CLEAN_NOZZLE
    G28                                 # Home all axes
    Z_CALIBRATE

    M190 S{BED_TEMP}                    # Heat bed and wait
    M109 S{EXTRUDER_TEMP}               # Heat hotend
    
    G1 Z2.0 F3000                       # Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.2 Y20 Z0.3 F5000.0            # Move to start position
    G1 X0.2 Y200.0 Z0.3 F1500.0 E15     # Draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0         # Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30        # Draw the second line
    G92 E0                              # Reset Extruder
    G1 Z2.0 F3000                       # Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0              # Move over to prevent blob squish

######################################################################
# END PRINT
######################################################################
[gcode_macro END_PRINT]
gcode:
    M140 S0                             # Turn off bed
    M104 S0                             # Turn off hotend
    M106 S0                             # Turn off fan
    G91                                 # Relative Positioning
    G1 X-2 Y-2 E-3 F300                 # Move nozzle away from print while retracting
    G1 Z10 F3000                        # Raise nozzle by 10mm
    G90                                 # Absolute Positioning
    #G1 X0 Y220                          # Move print head to parking position
    G28 X                               # Home X
    G28 Y                               # Home Y
    M84                                 # Disable steppers

######################################################################
# PREHEAT PLA
######################################################################
[gcode_macro PREHEAR_PLA]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    M104 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}                    # Wait for bed to reach temperature

######################################################################
# PREHEAT ABS
######################################################################
[gcode_macro PREHEAR_ABS]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(260)|float %}
    M104 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}                    # Wait for bed to reach temperature

######################################################################
# M600
######################################################################
[gcode_macro M600]                      # Cambio de Filamento
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    M109 S210
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

#####################################################################
# CLEAN NOZZLE]
#####################################################################    
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 60
variable_start_y: 247                   # No puede superar 250 --> 247+3=250
variable_start_z: 2.5
variable_wipe_dist_x: 10
variable_wipe_dist_y: 3
variable_wipe_qty: 3
variable_wipe_spd: 50
variable_raise_distance: 10

gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
 
  G90                                   # Absolute positioning
  G1 Z{start_z} F1500                   # Move nozzle to start position Z
  G1 X{start_x} Y{start_y} F6000        # Move nozzle to start position X Y

  # Wipe nozzle
  {% for wipes in range(0, wipe_qty) %}
    # WIPE LEFT
    G1 X{start_x + wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x + wipe_dist_x} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x + wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x + wipe_dist_x} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x + wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
    # WIPE RIGHT
    G1 X{start_x - wipe_dist_x} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x - wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x - wipe_dist_x} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x - wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
    G1 X{start_x - wipe_dist_x} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
    {% endfor %}
 
    G1 Y{start_y + wipe_dist_y}
  
    {% for wipes in range(0, wipe_qty) %}
      G1 X{start_x + 20} F{wipe_spd * 300}
      G1 X{start_x - 20} F{wipe_spd * 300}
    {% endfor %}

 G1 Z{raise_distance}                   # Raise nozzle after complete

######################################################################
# UNLOAD FILAMENT
######################################################################
[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
 
    G91                                 # Relative positioning
    G0 Z{ z_safe_lift }                 # Lift Z
    G92 E0                              # Reset extruder position
    G1 E5.0 F300                        # Extrude a little
    G1 E-50 F{ 10 * 60 }                # Perform the unload
    G1 E-50 F{ 5 * 60 }                 # Finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}

######################################################################
# PURGE
######################################################################
[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                                 # Relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }      # Purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}

######################################################################
# LOAD FILAMENT
######################################################################
[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                                 # Relative coords
    G1 E50 F{ 5 * 60 }                  # Extrude
    G4 P{ 0.9 * 1000 }                  # Dwell (ms)
    G1 E25.0 F{ 5 * 60 }                # Extrude a little more
    #_ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}

######################################################################
# HOME
######################################################################
[gcode_macro HOME]
gcode:
  G90                                   # Absolute Positioning
  G92 E0                                # Reset Extruder
  G28                                   # Home all axes

######################################################################
# BED SCREWS CALCULATE
######################################################################
[gcode_macro BED_SCREWS_CALCULATE]
gcode:
  SCREWS_TILT_CALCULATE

######################################################################
# Z CALIBRATE
######################################################################
[gcode_macro Z_CALIBRATE]
gcode:
  CALIBRATE_Z

######################################################################
# CONFIG SAVE
######################################################################
[gcode_macro CONFIG_SAVE]
gcode:
  SAVE_CONFIG

######################################################################
# BED_MESH
######################################################################
[gcode_macro BED_MESH]
gcode:
  BED_MESH_CALIBRATE

######################################################################
# UPDATE GIT
######################################################################
[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

######################################################################
# UPDATE GIT MESSAGE
######################################################################
[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True

######################################################################
# BED MESH CALIBRATE
######################################################################
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}